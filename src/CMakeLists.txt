# Base EFM32 CMake file
#
# This can be used as is as a project base, or by adding the efm32-base
# repository as a submodule to another project, copying this CMakeLists file
# to the top level directory, and updating the BASE_LOCATION variable to reflect this
# change
#
## Copyright (c) 2016 Ryan Kurte
# This file is covered under the MIT license available at: https://opensource.org/licenses/MIT

###### Project Environment #####

# Set minimum CMake version
cmake_minimum_required(VERSION 2.8.4)

# Set efm32-base project location
set(BASE_LOCATION .)

# Set the compiler (must be prior to project setup)
include(${BASE_LOCATION}/toolchain/arm-gcc.cmake)

##### Project Setup #####

# Set our output target
set(TARGET firmata)

# Configure project and languages
project(${TARGET} C CXX ASM)

# Set default device
if(NOT DEVICE)
set(DEVICE EFR32BG1B232F256GM48)
endif()

# Setup serial interface
if(NOT SERIAL)
set(SERIAL DEV)
endif()

add_compile_definitions(LOC=${SERIAL}_LOC)
add_compile_definitions(RX=${SERIAL}_PIN_RX)
add_compile_definitions(TX=${SERIAL}_PIN_TX)

# Set build
if(NOT CMAKE_BUILD_TYPE)
set(CMAKE_BUILD_TYPE DEBUG)
endif()

##### Modules #####

# Libraries can be added to the LIBS variable
# or manually included here.

# Add base libs (emlib, emdrv, CMSIS, device files)
include(${BASE_LOCATION}/toolchain/firmata.cmake)

##### Files #####

# Add project headers
include_directories(
	${BASE_LOCATION}/include/balena
	${BASE_LOCATION}/include/firmata
	${BASE_LOCATION}/include/serial
	${BASE_LOCATION}/include/config
	${BASE_LOCATION}/include/spyfly
)

# Add project sources
set(SOURCES
	${BASE_LOCATION}/source/StandardFirmata.cpp
	${BASE_LOCATION}/source/protocol/balena/balena.cpp
	${BASE_LOCATION}/source/protocol/firmata/Firmata.cpp
	${BASE_LOCATION}/source/protocol/firmata/FirmataMarshaller.cpp
	${BASE_LOCATION}/source/protocol/firmata/FirmataParser.cpp
	${BASE_LOCATION}/source/protocol/serial/Serial.cpp
	${BASE_LOCATION}/source/protocol/spyfly/spyfly.cpp
)

##### Outputs #####

# Generate executable and link
add_executable(${TARGET} ${SOURCES})

##### Git Versioning #####

# Add build tag to firmware version
find_package(Git)
add_custom_target(version
  ${CMAKE_COMMAND} -D SRC=${CMAKE_SOURCE_DIR}/toolchain/version.h.in
                   -D DST=${CMAKE_SOURCE_DIR}/include/balena/version.h
                   -D GIT_EXECUTABLE=${GIT_EXECUTABLE}
                   -P ${CMAKE_SOURCE_DIR}/toolchain/version.cmake
)
add_dependencies(${TARGET} version)

target_link_libraries(${TARGET} ${LIBS})

##### Post build #####

# Add post build commands
include(${BASE_LOCATION}/toolchain/post-build.cmake)

# Add JLink commands
include(${BASE_LOCATION}/toolchain/jlink.cmake)

